<?php

/**
 * Process jQuery Ajax DataTable Module 1.0.0
 *
 * @author Philipp 'Soma' Urlich, philipp at urlich dot ch
 *
 * @date_created 27/10/2011
 * @last_modified 06/03/2012
 *
 * ProcessWire 2.x 
 * Copyright (C) 2011 by Ryan Cramer 
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 * 
 * http://www.processwire.com
 * http://www.ryancramer.com
 *
 */

 /* Language string as in datatables lib for reference
 this.oLanguage = {
	"sProcessing": "Processing...",
	"sLengthMenu": "Show _MENU_ entries",
	"sZeroRecords": "No matching records found",
	"sEmptyTable": "No data available in table",
	"sLoadingRecords": "Loading...",
	"sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
	"sInfoEmpty": "Showing 0 to 0 of 0 entries",
	"sInfoFiltered": "(filtered from _MAX_ total entries)",
	"sInfoPostFix": "",
	"sInfoThousands": ",",
	"sSearch": "Search:",
	"sUrl": "",
	"oPaginate": {
		"sFirst":    "First",
		"sPrevious": "Previous",
		"sNext":     "Next",
		"sLast":     "Last"
	},
	"fnInfoCallback": null
};

*/

class ProcessDataTable extends Process {
	
	static $columns = array('id','title','path','modified','modified_users_id','actions');
	
	public static function getModuleInfo() {
		return array(
			'title' => 'DataTable',
			'summary' => 'Ajax driven data-table for pages. Adds "DataTable" page in ProcessWire admin.',
			'version' => 100,
			'href' => 'http://processwire.com/talk/topic/704-datatable/',
			'permission' => 'page-edit'
		);
	}
	
	public function init() {
		parent::init();
	
	}
	
	public function ___execute() {
		
		// we use own latest fancybox since I can't get the old in PW to work with iframes
		//$this->modules->get("JqueryFancybox");

		// add necessary admin page scripts
		// ---------------------------------------------------------------------------------
		$this->config->styles->append( $this->config->urls->ProcessDataTable . "css/demo_table.css" );
		$this->config->styles->append( $this->config->urls->ProcessDataTable . "css/demo_table_jui.css" );
		$this->config->styles->append( $this->config->urls->ProcessDataTable . "js/fancybox/jquery.fancybox.css" );
		$this->config->scripts->append( $this->config->urls->ProcessDataTable . "js/dataTables/jquery.dataTables.min.js" );
		$this->config->scripts->append( $this->config->urls->ProcessDataTable . "js/fancybox/jquery.fancybox.pack.js" );
		
		// multilanguage support so it can be translated, string as used in DataTable js
		// ---------------------------------------------------------------------------------
		$lang = array(
			"sProcessing" => $this->_("Processing..."),
			"sLengthMenu" => $this->_("Show _MENU_ entries"),
			"sZeroRecords" => $this->_("No matching records found"),
			"sEmptyTable" => $this->_("No data available in table"),
			"sInfo" => $this->_("Showing _START_ to _END_ of _TOTAL_ entries"),
			"sInfoEmpty" => $this->_("Showing 0 to 0 of 0 entries"),
			"sInfoFiltered" => $this->_("(filtered from _MAX_ total entries)"),
			"sSearch" => $this->_("Search:"),
			"sFirst" => $this->_("First"),
			"sPrevious" => $this->_("Previous"),
			"sNext" => $this->_("Next"),
			"sLast" => $this->_("Last"),
		);

		// output js config object for this module
		// ---------------------------------------------------------------------------------
		$this->config->js($this->className(), $lang); 

		// build form for template filtering
		// ---------------------------------------------------------------------------------
		$form = $this->modules->get("InputfieldForm"); 
		$form->id = 'filters';
		$form->method = 'get';
		$form->action = './';


		// generating the template select, we only list templates the user has edit access
		// ---------------------------------------------------------------------------------

		$field = $this->modules->get("InputfieldSelect"); 
		$field->attr('id+name', 'filter_template'); 
		$field->label = "Filter by Template";
		$field->description = "Select a template and only pages with this template will be shown.";
		$field->addOption('', 'Show All');

		foreach($this->templates as $t) {
			$name = $t->name;
			// user has edit permission on template level?
			if($this->user->hasPermission('page-edit', $t)){
				
				// if it's a system template (superusers only) append an asteriks
				if(($t->flags & Template::flagSystem)) $name .= "*";

				// if template previously selected and saved in session we make it selected
				if($this->session->templatefilter && $this->session->templatefilter == $t->name) {
					$field->addOption($t->name, $name, array("selected"=>"selected"));
				} else {
					$field->addOption($t->name, $name);
				}
			}
			
		}
		
		// if template was selected previously we set it to not collapse
		if($this->session->templatefilter) {
			$field->collapsed = Inputfield::collapsedNo;
		} else {
			$field->collapsed = Inputfield::collapsedYes;
		}

		// add select to fieldset wrapper and from wrapper
		$form->add($field);

		// constructing default empty html markup table output
		// ---------------------------------------------------------------------------------

		$out = '';
		$tmarkup = <<<_END
<table width="100%" class="dataTable display">
		<col width="3%"/>
		<col width="30%"/>
		<col width="30%"/>
		<col width="20%"/>
		<col width="10%"/>
		<col width="10%"/>
		<thead>
			<tr>
				<th>ID</th>
				<th>Title</th>
				<th>Path</th>
				<th>Modified</th>
				<th>mod user</th>
				<th>actions</th>
			</tr>
		</thead>
		<tbody>
	
		</tbody>
		<tfoot>
			<tr>
				<th>ID</th>
				<th>Title</th>
				<th>Path</th>
				<th>Modified</th>
				<th>mod user</th>
				<th>actions</th>
			</tr>
		</tfoot>
</table>

<script>
	$(function(){
		

			
	});

</script>
_END;
		// return markup for output
		return $out . $form->render() . $tmarkup;
		
	}
	
	/**
	* getdata 
	* gets called by the datatable to recieve the table data
	* 
	* @return string datatable object array
	*/

	public function executeGetData() {

		$admin_url = $this->config->urls->admin;
		$template = '';
		$is_superuser = $this->user->isSuperuser();

		// if filter template set
		if(isset($this->input->get->filter_template) && $this->input->get->filter_template != '') {
			$template = "template=".$this->sanitizer->selectorValue($this->input->get->filter_template) . ",";
			// save template filter in session
			$this->session->templatefilter = $this->input->get->filter_template;
		} else {
			$this->session->templatefilter = '';
		}

		// extend selector string with access options
		$selector = "{$template}include=all,";

		// if not superuser exclude admin pages and trash page
		if(!$is_superuser) $selector .= "template!=admin,has_parent!=2,id!=2|7,";

		if( $this->input->get->sSearch ) {
			$q = $this->sanitizer->text($this->input->get->sSearch);
			$selector .= "title|body%=$q,";
		}

		$sOrder = '';
		
		if ( $this->input->get->iSortingCols > 0 ) {
			for ( $i = 0 ; $i < intval( $this->input->get->iSortingCols ) ; $i++ ) {
				if ( $this->input->get( "bSortable_$i" ) == true ) {
					$sort = '';
					$sort = $this->input->get( "sSortDir_$i" ) == 'asc' ? '-' : '' ;
					$sOrder .= "sort=".$sort.self::$columns[ intval( $this->input->get[ "iSortCol_$i" ] ) ] . ",";
				} else {
					$sOrder = "sort=-modified";
				}
			}
			//$sOrder = substr( $sOrder, 0 , -1 );
		} else {
			$sOrder = "sort=-modified";
		}
		
		$selector .= $sOrder;
	
		//echo $selector;
		//exit();
		
		$pa = $this->pages->find($selector."start=".$_REQUEST['iDisplayStart'].",limit=".$_REQUEST['iDisplayLength']);
		$total = $pa->getTotal();
		
		$sOutput = '';
		$sOutput .= '{"sEcho": '.intval($_GET['sEcho']).', ';
		$sOutput .= '"iTotalRecords": '.$total.', ';
		$sOutput .= '"iTotalDisplayRecords": '.$total.', ';
		$sOutput .= '"aaData": [ ';
	

		$json = array();
		foreach($pa as $p) {

			// get status'
			$editable = $p->editable();
			$unpublished = $p->is(Page::statusUnpublished);
			$viewable = $p->viewable();

			$sOutput .= "[";

			// page id
			$sOutput .= '"'.$p->id.'",';

			// title 
			$sOutput .= '"';
			if($unpublished) $sOutput .= '<s>';
			if($editable) $sOutput .= '<a class=\"edit-modal fancybox.iframe\" href=\"'.$admin_url.'page/edit/?id='.$p->id.'&modal=1\">';
			$sOutput .= $p->get("title|name") ;
			if($editable) $sOutput .= '</a>';
			if($unpublished) $sOutput .= '</s>';
			$sOutput .= '",';

			// path with url to open in tree
			$sOutput .= '"';
			if(!$p->isTrash() || $is_superuser) $sOutput .= '<a href=\"'.$admin_url.'page/?open='.$p->id.'\">';
			$sOutput .= $p->url;
			if(!$p->isTrash() || $is_superuser) $sOutput .= '</a>';
			$sOutput .= '",';

			// date modified
			$sOutput .= '"'.date('Y-m-d H:i:s',$p->modified).'",';

			// user modified
			if($this->user->hasRole('superuser')) {
				$sOutput .= '"<a href=\"/processwire/access/users/edit/?id='.$p->modifiedUser.'\">'.$p->modifiedUser->name.'</a>",';
			} else {
				$sOutput .= '"'.$p->modifiedUser->name.'",';
			}
			
			$sOutput .= '"';
			if($editable) $sOutput .= '<a class=\"edit-modal fancybox.iframe\" href=\"'.$admin_url.'page/edit/?id='.$p->id.'&modal=1\">edit</a>&nbsp;';
			if($viewable) $sOutput .= '<a href=\"http://'.$this->config->httpHost.$p->url.'\">view</a>&nbsp;';
			$sOutput .= '"';

			$sOutput .= "],";
		}
		
		//$sOutput .= json_encode($json);
		
		$sOutput = substr( $sOutput, 0, -1 );
		$sOutput .= '] }';
		
		return $sOutput;
	}

	
	public function ___install() {
		$p = new Page();
		$p->template = $this->templates->get("admin");
		$p->parent = $this->pages->get(2);
		$p->title = 'DataTable';
		$p->name = 'datatable';
		$p->process = $this;
		$p->save();
	}

	public function ___uninstall() {
		$p = $this->pages->get('template=admin, name=datatable');
		$p->delete();
	}
}
